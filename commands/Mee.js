// commands/‡πÄ‡∏à‡∏≠‡πÑ‡∏ô‡∏ó‡πå.js

const axios = require('axios');
const stringSimilarity = require('string-similarity');

module.exports = {
    name: '‡πÄ‡∏à‡∏≠‡πÑ‡∏ô‡∏ó‡πå', // ‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ /)
    description: '‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ö‡πÄ‡∏à‡∏≠‡πÑ‡∏ô‡∏ó‡πå‡πÉ‡∏ô‡∏ò‡∏µ‡∏°‡∏Ñ‡∏£‡∏¥‡∏™‡∏ï‡πå‡∏°‡∏≤‡∏™ 2025 üéÑ',
    usage: '‡πÄ‡∏à‡∏≠‡πÑ‡∏ô‡∏ó‡πå [‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°] ‡∏´‡∏£‡∏∑‡∏≠ ‡πÄ‡∏à‡∏≠‡πÑ‡∏ô‡∏ó‡πå ‡∏™‡∏≠‡∏ô [‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°1] = [‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö1] | [‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°2] = [‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö2] | ...',
    execute: async (bot, msg) => {
        const start = Date.now();
        const chatId = msg.chat.id;
        const args = msg.text.split(' ').slice(1); // ‡πÅ‡∏¢‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°

        if (args.length === 0) {
            return bot.sendMessage(chatId, "üéÖ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏à‡∏≠‡πÑ‡∏ô‡∏ó‡πå üéÑ");
        }

        const command = args.join(' ').trim();
        const firebaseURL = "https://your-project-id.firebaseio.com/responses.json"; // ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢ URL ‡∏Ç‡∏≠‡∏á Firebase ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ "‡∏™‡∏≠‡∏ô" ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if (command.startsWith('‡∏™‡∏≠‡∏ô')) {
            const input = command.replace('‡∏™‡∏≠‡∏ô', '').trim();
            if (!input.includes('=')) {
                return bot.sendMessage(
                    chatId,
                    `üéÅ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö:\n‡πÄ‡∏à‡∏≠‡πÑ‡∏ô‡∏ó‡πå ‡∏™‡∏≠‡∏ô [‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°1] = [‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö1] | [‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°2] = [‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö2] üéÄ`
                );
            }

            // ‡πÅ‡∏¢‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°-‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏π‡πà‡∏î‡πâ‡∏ß‡∏¢ "|"
            const pairs = input.split('|').map(pair => pair.trim());
            const dataToSave = {};

            pairs.forEach(pair => {
                const [question, answer] = pair.split('=').map(str => str.trim());
                if (question && answer) {
                    if (!dataToSave[question]) {
                        dataToSave[question] = [];
                    }
                    dataToSave[question].push(answer);
                }
            });

            try {
                // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°‡∏à‡∏≤‡∏Å Firebase
                const response = await axios.get(firebaseURL);
                const existingData = response.data || {};

                // ‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
                Object.keys(dataToSave).forEach(question => {
                    if (!existingData[question]) {
                        existingData[question] = [];
                    }

                    if (!Array.isArray(existingData[question])) {
                        existingData[question] = [existingData[question]];
                    }

                    // ‡∏£‡∏ß‡∏°‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ
                    dataToSave[question].forEach(newAnswer => {
                        if (!existingData[question].includes(newAnswer)) {
                            existingData[question].push(newAnswer);
                        }
                    });
                });

                // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏•‡∏á Firebase
                await axios.put(firebaseURL, existingData);

                const successMessage = Object.keys(dataToSave)
                    .map(q => `üéÄ "${q}" = "${dataToSave[q].join(', ')}" üéÅ`)
                    .join('\n');

                return bot.sendMessage(
                    chatId,
                    `‚úÖ ‡∏™‡∏≠‡∏ô‡πÄ‡∏à‡∏≠‡πÑ‡∏ô‡∏ó‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! üéÑ\n\n‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°:\n${successMessage}`
                );
            } catch (error) {
                console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", error.message || error);
                return bot.sendMessage(
                    chatId,
                    `‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ üéÖ`
                );
            }
        }

        // ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á "‡∏™‡∏≠‡∏ô" ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
        try {
            const response = await axios.get(firebaseURL);
            const data = response.data;

            if (data) {
                const questions = Object.keys(data);
                const bestMatch = stringSimilarity.findBestMatch(command, questions);

                if (bestMatch.bestMatch.rating > 0.6) {
                    const matchedQuestion = bestMatch.bestMatch.target;
                    const answers = data[matchedQuestion];

                    const botResponse = Array.isArray(answers)
                        ? answers[Math.floor(Math.random() * answers.length)]
                        : answers;

                    const totalAnswers = Array.isArray(answers) ? answers.length : 1;

                    const end = Date.now();
                    const elapsedTime = ((end - start) / 1000).toFixed(2);

                    return bot.sendMessage(
                        chatId,
                        `‚è∞ ${elapsedTime} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ\nüí¨ ${totalAnswers} ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö\n\nüéÑ *Merry Christmas 2025!*\nüéÖ ‡πÄ‡∏à‡∏≠‡πÑ‡∏ô‡∏ó‡πå: ${botResponse}`,
                        { parse_mode: "Markdown" }
                    );
                }
            }

            const end = Date.now();
            const elapsedTime = ((end - start) / 1000).toFixed(2);

            return bot.sendMessage(
                chatId,
                `‚è∞ ${elapsedTime} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ\nüí¨ 0 ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö\n\nüéÑ *Merry Christmas 2025!*\nüéÖ ‡πÄ‡∏à‡∏≠‡πÑ‡∏ô‡∏ó‡πå: ‡∏ú‡∏°‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Ñ‡∏≥‡∏ô‡∏µ‡πâ üéÅ\nüéÄ ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏≠‡∏ô‡∏ú‡∏°‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: "‡πÄ‡∏à‡∏≠‡πÑ‡∏ô‡∏ó‡πå ‡∏™‡∏≠‡∏ô [‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°] = [‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö]"`
            );
        } catch (error) {
            console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", error.message || error);
            return bot.sendMessage(
                chatId,
                `‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á üéÑ`
            );
        }
    },
};
