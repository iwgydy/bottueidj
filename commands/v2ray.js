const axios = require('axios');
const { v4: uuidv4 } = require('uuid');

module.exports = {
  name: 'addclient', // ‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ /)
  description: '‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö V2Ray',
  execute: (bot) => {
    // ------------------------------------------------------------
    // 1) ‡∏´‡∏≤‡∏Å‡∏û‡∏¥‡∏°‡∏û‡πå /addclient ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
    // ------------------------------------------------------------
    bot.onText(/^\/addclient(?:@\w+)?$/, (msg) => {
      bot.sendMessage(
        msg.chat.id,
        "‚ùó ‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏Ñ‡πâ‡∏î ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô ‡πÅ‡∏•‡∏∞ GB ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£\n\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: `/addclient mycode 30 100`",
        { parse_mode: "Markdown" }
      );
    });

    // ------------------------------------------------------------
    // 2) ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /addclient <‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏Ñ‡πâ‡∏î> <‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô> <GB>
    // ------------------------------------------------------------
    bot.onText(/^\/addclient(?:@\w+)?\s+(\S+)\s+(\d+)\s+(\d+)/, async (msg, match) => {
      const chatId = msg.chat.id;
      const codeName = match[1];
      const days = parseInt(match[2], 10);
      const totalGB = parseInt(match[3], 10);

      if (!codeName || isNaN(days) || days <= 0 || isNaN(totalGB) || totalGB < 0) {
        return bot.sendMessage(
          chatId,
          "‚ùó ‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÄ‡∏ä‡πà‡∏ô `/addclient mycode 30 100`",
          { parse_mode: "Markdown" }
        );
      }

      // ‡πÅ‡∏à‡πâ‡∏á‡∏ß‡πà‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î
      let creatingMsg;
      try {
        creatingMsg = await bot.sendMessage(chatId, `‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î: "${codeName}" ...`);
      } catch (error) {
        console.error("‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", error);
        return;
      }

      // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
      const loginUrl = 'http://creators.trueid.net.vipv2boxth.xyz:2053/13RpDPnN59mBvxd/login'; // URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
      const loginData = {
        username: 'WYEXPRkCKL', // ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏£‡∏¥‡∏á
        password: 'nfEpAlava1', // ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á
      };

      try {
        const loginResponse = await axios.post(loginUrl, new URLSearchParams(loginData), {
          headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        });

        if (!loginResponse.data.success) {
          throw new Error(`‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${loginResponse.data.msg}`);
        }
        console.log('‚úÖ ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');

        // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î
        const addClientUrl = 'http://creators.trueid.net.vipv2boxth.xyz:2053/13RpDPnN59mBvxd/panel/api/inbounds/addClient'; // URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
        const uuid = uuidv4();
        const expiryTime = Math.floor(Date.now() / 1000) + days * 24 * 60 * 60;

        const clientData = {
          id: 3, // ‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
          settings: JSON.stringify({
            clients: [
              {
                id: uuid,
                flow: '',
                email: codeName,
                limitIp: 2,
                totalGB: totalGB > 0 ? totalGB * 1024 * 1024 * 1024 : 0, // ‡πÅ‡∏õ‡∏•‡∏á GB ‡πÄ‡∏õ‡πá‡∏ô Bytes
                expiryTime: expiryTime,
                enable: true,
                tgId: '',
                subId: '2rv0gb458kbfl532',
                reset: 0,
              },
            ],
          }),
        };

        const addClientResponse = await axios.post(addClientUrl, clientData, {
          headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json',
          },
        });

        if (!addClientResponse.data.success) {
          throw new Error(`‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${addClientResponse.data.msg}`);
        }

        const clientCode = `vless://${uuid}@localhost:443?type=ws&path=/&host=localhost&security=none#${encodeURIComponent(
          codeName
        )}`;
        console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', clientCode);

        // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î"
        if (creatingMsg) {
          await bot.deleteMessage(chatId, creatingMsg.message_id);
        }

        // ‡∏™‡πà‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        bot.sendMessage(
          chatId,
          `‚úÖ *‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!*\n\nüì¨ ‡πÇ‡∏Ñ‡πâ‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì:\n\`${clientCode}\`\n\nüìÖ ‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏: ${days} ‡∏ß‡∏±‡∏ô\nüíæ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ${totalGB} GB`,
          { parse_mode: 'Markdown' }
        );
      } catch (error) {
        console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.message);

        // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î"
        if (creatingMsg) {
          try {
            await bot.deleteMessage(chatId, creatingMsg.message_id);
          } catch (err) {
            console.error('‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', err.message);
          }
        }

        bot.sendMessage(chatId, `‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error.message}`);
      }
    });
  },
};
