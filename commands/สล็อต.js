const fs = require('fs');
const path = require('path');

module.exports = {
  name: 'slot',
  description: '‡πÄ‡∏Å‡∏°‡∏™‡∏•‡πá‡∏≠‡∏ï‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏à‡∏£‡∏¥‡∏á ‡πÉ‡∏ä‡πâ 1 ‡∏ö‡∏≤‡∏ó‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏∏‡∏ô',
  execute(bot) {
    const filePath = path.join(__dirname, 'smo.json');

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå smo.json
    function loadOrCreateFile() {
      if (!fs.existsSync(filePath)) {
        fs.writeFileSync(filePath, JSON.stringify({}, null, 2));
      }
      const data = fs.readFileSync(filePath);
      return JSON.parse(data);
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á‡πÉ‡∏ô smo.json
    function saveToFile(data) {
      fs.writeFileSync(filePath, JSON.stringify(data, null, 2));
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏∏‡πà‡∏°‡∏™‡∏•‡πá‡∏≠‡∏ï
    function spinSlot() {
      const symbols = ['üçí', 'üçã', 'üçâ', '‚≠ê', 'üíé', 'üçá'];
      return Array.from({ length: 3 }, () =>
        Array.from({ length: 3 }, () => symbols[Math.floor(Math.random() * symbols.length)])
      );
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•
    function calculateReward(grid) {
      const payout = {
        'üçí': 2,
        'üçã': 3,
        'üçâ': 5,
        '‚≠ê': 10,
        'üíé': 50,
        'üçá': 20,
      };

      let reward = 0;

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏ô‡∏ß‡∏Å‡∏•‡∏≤‡∏á
      if (grid[1][0] === grid[1][1] && grid[1][1] === grid[1][2]) {
        reward = payout[grid[1][0]] || 0;
      }

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏ô‡∏ß‡πÄ‡∏â‡∏µ‡∏¢‡∏á
      if (grid[0][0] === grid[1][1] && grid[1][1] === grid[2][2]) {
        reward += payout[grid[1][1]] || 0;
      }
      if (grid[0][2] === grid[1][1] && grid[1][1] === grid[2][0]) {
        reward += payout[grid[1][1]] || 0;
      }

      return reward;
    }

    // ‡∏à‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /slot
    bot.onText(/\/slot/, async (msg) => {
      try {
        const userId = msg.from.id;
        const chatId = msg.chat.id;

        // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        const data = loadOrCreateFile();

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ
        if (!data[userId]) {
          data[userId] = { balance: 10 }; // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà 10 ‡∏ö‡∏≤‡∏ó
          saveToFile(data);
        }

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô
        if (data[userId].balance < 1) {
          return bot.sendMessage(chatId, "‚ùå ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏û‡∏≠‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏•‡πà‡∏ô‡∏™‡∏•‡πá‡∏≠‡∏ï (‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ 1 ‡∏ö‡∏≤‡∏ó)");
        }

        // ‡∏´‡∏±‡∏Å‡πÄ‡∏á‡∏¥‡∏ô 1 ‡∏ö‡∏≤‡∏ó
        data[userId].balance -= 1;
        saveToFile(data);

        // ‡∏´‡∏°‡∏∏‡∏ô‡∏™‡∏•‡πá‡∏≠‡∏ï
        const grid = spinSlot();
        const reward = calculateReward(grid);

        // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏ñ‡πâ‡∏≤‡∏ä‡∏ô‡∏∞
        if (reward > 0) {
          data[userId].balance += reward;
          saveToFile(data);
        }

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡πá‡∏ö‡∏™‡∏•‡πá‡∏≠‡∏ï
        const slotResult = `
üé∞ **‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏∏‡∏ô‡∏™‡∏•‡πá‡∏≠‡∏ï** üé∞
\`\`\`
| ${grid[0][0]} | ${grid[0][1]} | ${grid[0][2]} |
| ${grid[1][0]} | ${grid[1][1]} | ${grid[1][2]} |  <<<<<
| ${grid[2][0]} | ${grid[2][1]} | ${grid[2][2]} |
\`\`\`

${reward > 0 ? `üéâ **‡∏Ñ‡∏∏‡∏ì‡∏ä‡∏ô‡∏∞‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏• ${reward} ‡∏ö‡∏≤‡∏ó!**` : 'üò¢ **‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÉ‡∏ô‡∏£‡∏≠‡∏ö‡∏ô‡∏µ‡πâ**'}

üí∞ **‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠**: ${data[userId].balance.toFixed(2)} ‡∏ö‡∏≤‡∏ó
        `;

        // ‡∏™‡πà‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        await bot.sendMessage(chatId, slotResult, { parse_mode: 'Markdown' });
      } catch (error) {
        console.error("Error in /slot command:", error.message);
        bot.sendMessage(msg.chat.id, "‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏™‡∏•‡πá‡∏≠‡∏ï");
      }
    });
  },
};
