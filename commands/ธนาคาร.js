const fs = require('fs');
const path = require('path');

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
module.exports = {
  name: 'bankCommandsWithButtons',
  description: '‡πÄ‡∏°‡∏ô‡∏π‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏î‡πâ‡∏ß‡∏¢‡∏õ‡∏∏‡πà‡∏°: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏¢‡∏≠‡∏î ‡∏ù‡∏≤‡∏Å ‡∏ñ‡∏≠‡∏ô',
  execute(bot) {
    const filePath = path.join(__dirname, 'smo.json');

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå smo.json
    function loadOrCreateFile() {
      if (!fs.existsSync(filePath)) {
        fs.writeFileSync(filePath, JSON.stringify({}, null, 2));
      }
      const data = fs.readFileSync(filePath);
      return JSON.parse(data);
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á‡πÉ‡∏ô smo.json
    function saveToFile(data) {
      fs.writeFileSync(filePath, JSON.stringify(data, null, 2));
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
    function getUserBalance(data, userId) {
      if (!data[userId]) {
        data[userId] = { balance: 0 };
      }
      return data[userId].balance;
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡πâ‡∏á‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    function setUserBalance(data, userId, newBalance) {
      data[userId] = { balance: newBalance };
      saveToFile(data);
    }

    // --------------------------------------------------------------------------------
    // 1) /bank - ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏õ‡∏∏‡πà‡∏°‡∏´‡∏•‡∏±‡∏Å (Inline Keyboard)
    // --------------------------------------------------------------------------------
    bot.onText(/\/bank/, (msg) => {
      const chatId = msg.chat.id;

      // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å
      const options = {
        reply_markup: {
          inline_keyboard: [
            [{ text: 'üè¶ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô', callback_data: 'check_balance' }],
            [{ text: 'üí∞ ‡∏ù‡∏≤‡∏Å‡πÄ‡∏á‡∏¥‡∏ô',       callback_data: 'deposit_menu' }],
            [{ text: 'üí≥ ‡∏ñ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô',       callback_data: 'withdraw_menu' }],
          ]
        }
      };

      bot.sendMessage(
        chatId,
        "ü§ñ [AI Banking System]\n" +
        "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö:",
        options
      );
    });

    // --------------------------------------------------------------------------------
    // 2) callback_query - ‡∏à‡∏±‡∏ö event ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏ô Inline Keyboard
    // --------------------------------------------------------------------------------
    bot.on('callback_query', (query) => {
      const chatId = query.message.chat.id;
      const userId = query.from.id;
      const data = query.data; // ‡∏Ñ‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠ callback_data ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡πÄ‡∏ã‡πá‡∏ï‡πÑ‡∏ß‡πâ

      // ‡πÇ‡∏´‡∏•‡∏î/‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå smo.json
      let fileData = loadOrCreateFile();
      // ‡∏≠‡πà‡∏≤‡∏ô‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
      let currentBalance = getUserBalance(fileData, userId);

      // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏∞‡πÑ‡∏£
      switch (data) {
        case 'check_balance':
          // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô
          bot.answerCallbackQuery(query.id); // ‡∏ï‡∏≠‡∏ö Callback (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ Telegram ‡∏´‡∏¢‡∏∏‡∏î‡πÇ‡∏•‡∏î‡∏î‡∏¥‡πâ‡∏á)
          bot.sendMessage(
            chatId,
            `üõ∞ [AI Banking System]\n\n` +
            `üí≥ ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏ô‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì: ${currentBalance.toFixed(2)} ‡∏ö‡∏≤‡∏ó\n` +
            `üîé ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡πà‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢`
          );
          break;

        case 'deposit_menu':
          // ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ù‡∏≤‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡πà‡∏≤‡∏á ‡πÜ
          bot.answerCallbackQuery(query.id);
          bot.sendMessage(chatId, "‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ù‡∏≤‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà?", {
            reply_markup: {
              inline_keyboard: [
                [
                  { text: "‡∏ù‡∏≤‡∏Å 50",  callback_data: "deposit_50" },
                  { text: "‡∏ù‡∏≤‡∏Å 100", callback_data: "deposit_100" },
                  { text: "‡∏ù‡∏≤‡∏Å 500", callback_data: "deposit_500" },
                ],
                [
                  { text: "‡∏ù‡∏≤‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏≠‡∏á", callback_data: "deposit_custom" },
                  { text: "‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å", callback_data: "back_to_main" }
                ]
              ]
            }
          });
          break;

        case 'withdraw_menu':
          // ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ñ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡πà‡∏≤‡∏á ‡πÜ
          bot.answerCallbackQuery(query.id);
          bot.sendMessage(chatId, "‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà?", {
            reply_markup: {
              inline_keyboard: [
                [
                  { text: "‡∏ñ‡∏≠‡∏ô 50",  callback_data: "withdraw_50" },
                  { text: "‡∏ñ‡∏≠‡∏ô 100", callback_data: "withdraw_100" },
                  { text: "‡∏ñ‡∏≠‡∏ô 500", callback_data: "withdraw_500" },
                ],
                [
                  { text: "‡∏ñ‡∏≠‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏≠‡∏á", callback_data: "withdraw_custom" },
                  { text: "‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å", callback_data: "back_to_main" }
                ]
              ]
            }
          });
          break;

        case 'back_to_main':
          // ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å
          bot.answerCallbackQuery(query.id);
          bot.sendMessage(chatId, "‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏π‡πà‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å", {
            reply_markup: {
              inline_keyboard: [
                [
                  { text: 'üè¶ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô', callback_data: 'check_balance' },
                  { text: 'üí∞ ‡∏ù‡∏≤‡∏Å‡πÄ‡∏á‡∏¥‡∏ô',         callback_data: 'deposit_menu' },
                  { text: 'üí≥ ‡∏ñ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô',         callback_data: 'withdraw_menu' }
                ]
              ]
            }
          });
          break;
        
        // ----------------------------
        //  ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ù‡∏≤‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏ö‡∏ö‡∏õ‡∏∏‡πà‡∏°
        // ----------------------------
        case 'deposit_50':
        case 'deposit_100':
        case 'deposit_500': {
          bot.answerCallbackQuery(query.id);
          // ‡∏ï‡∏±‡∏î‡πÄ‡∏≠‡∏≤‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡∏≤‡∏Å callback_data => deposit_50 => "50"
          const depositAmount = parseFloat(data.split('_')[1]);
          const newBalance = currentBalance + depositAmount;
          setUserBalance(fileData, userId, newBalance);

          bot.sendMessage(
            chatId,
            `ü§ñ [AI Banking System]\n\n` +
            `üí∏ ‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ù‡∏≤‡∏Å‡πÄ‡∏á‡∏¥‡∏ô: +${depositAmount.toFixed(2)} ‡∏ö‡∏≤‡∏ó\n` +
            `üí≥ ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà: ${newBalance.toFixed(2)} ‡∏ö‡∏≤‡∏ó\n` +
            `‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡πà‡∏≤‡∏ô Blockchain ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢`
          );
          break;
        }

        // ----------------------------
        //  ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ñ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏ö‡∏ö‡∏õ‡∏∏‡πà‡∏°
        // ----------------------------
        case 'withdraw_50':
        case 'withdraw_100':
        case 'withdraw_500': {
          bot.answerCallbackQuery(query.id);
          const withdrawAmount = parseFloat(data.split('_')[1]);
          
          if (currentBalance < withdrawAmount) {
            bot.sendMessage(
              chatId,
              `üö´ [AI Denied]\n` +
              `‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ñ‡∏≠‡∏ô\n` +
              `üîé ‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì: ${currentBalance.toFixed(2)} ‡∏ö‡∏≤‡∏ó`
            );
          } else {
            const newBalance = currentBalance - withdrawAmount;
            setUserBalance(fileData, userId, newBalance);
            
            bot.sendMessage(
              chatId,
              `ü§ñ [AI Banking System]\n\n` +
              `üí∏ ‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô: -${withdrawAmount.toFixed(2)} ‡∏ö‡∏≤‡∏ó\n` +
              `üí≥ ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà: ${newBalance.toFixed(2)} ‡∏ö‡∏≤‡∏ó\n` +
              `‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏î‡πâ‡∏ß‡∏¢ Quantum Computing ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡πÅ‡∏ö‡∏ö`
            );
          }
          break;
        }

        // ‡∏Å‡∏£‡∏ì‡∏µ‡∏ù‡∏≤‡∏Å/‡∏ñ‡∏≠‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∑‡πà‡∏ô ‡πÜ (‡∏ù‡∏≤‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏≠‡∏á / ‡∏ñ‡∏≠‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏≠‡∏á)
        case 'deposit_custom':
          bot.answerCallbackQuery(query.id);
          bot.sendMessage(
            chatId,
            "‡πÇ‡∏õ‡∏£‡∏î‡∏û‡∏¥‡∏°‡∏û‡πå‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ù‡∏≤‡∏Å\n‡πÄ‡∏ä‡πà‡∏ô: 123.45",
            {
              reply_markup: {
                force_reply: true
              }
            }
          ).then((sentMessage) => {
            // ‡∏£‡∏≠‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (deposit amount)
            bot.onReplyToMessage(chatId, sentMessage.message_id, (userMsg) => {
              const customAmount = parseFloat(userMsg.text);
              if (isNaN(customAmount) || customAmount <= 0) {
                bot.sendMessage(chatId, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á.");
                return;
              }

              const newBalance = currentBalance + customAmount;
              setUserBalance(fileData, userId, newBalance);

              bot.sendMessage(
                chatId,
                `ü§ñ [AI Banking System]\n\n` +
                `üí∏ ‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ù‡∏≤‡∏Å‡πÄ‡∏á‡∏¥‡∏ô: +${customAmount.toFixed(2)} ‡∏ö‡∏≤‡∏ó\n` +
                `üí≥ ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà: ${newBalance.toFixed(2)} ‡∏ö‡∏≤‡∏ó`
              );
            });
          });
          break;

        case 'withdraw_custom':
          bot.answerCallbackQuery(query.id);
          bot.sendMessage(
            chatId,
            "‡πÇ‡∏õ‡∏£‡∏î‡∏û‡∏¥‡∏°‡∏û‡πå‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô\n‡πÄ‡∏ä‡πà‡∏ô: 123.45",
            {
              reply_markup: {
                force_reply: true
              }
            }
          ).then((sentMessage) => {
            // ‡∏£‡∏≠‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (withdraw amount)
            bot.onReplyToMessage(chatId, sentMessage.message_id, (userMsg) => {
              const customAmount = parseFloat(userMsg.text);
              if (isNaN(customAmount) || customAmount <= 0) {
                bot.sendMessage(chatId, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á.");
                return;
              }

              if (currentBalance < customAmount) {
                bot.sendMessage(
                  chatId,
                  `üö´ [AI Denied]\n` +
                  `‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ñ‡∏≠‡∏ô\n` +
                  `üîé ‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì: ${currentBalance.toFixed(2)} ‡∏ö‡∏≤‡∏ó`
                );
                return;
              }

              const newBalance = currentBalance - customAmount;
              setUserBalance(fileData, userId, newBalance);

              bot.sendMessage(
                chatId,
                `ü§ñ [AI Banking System]\n\n` +
                `üí∏ ‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô: -${customAmount.toFixed(2)} ‡∏ö‡∏≤‡∏ó\n` +
                `üí≥ ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà: ${newBalance.toFixed(2)} ‡∏ö‡∏≤‡∏ó`
              );
            });
          });
          break;

        default:
          // ‡∏Å‡∏£‡∏ì‡∏µ callback_data ‡∏≠‡∏∑‡πà‡∏ô ‡πÜ
          bot.answerCallbackQuery(query.id, { text: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£" });
          break;
      }
    });
  },
};
