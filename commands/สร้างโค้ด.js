const axios = require('axios');
const { v4: uuidv4 } = require('uuid');

module.exports = {
  name: 'createv2ray',
  description: '‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î V2Ray ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• UUID, Email, GB, ‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏',
  execute(bot) {
    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏∏‡πà‡∏°‡∏≠‡∏µ‡πÄ‡∏°‡∏•
    function generateRandomEmail() {
      const chars = 'abcdefghijklmnopqrstuvwxyz1234567890';
      let email = '';
      for (let i = 0; i < 8; i++) {
        email += chars[Math.floor(Math.random() * chars.length)];
      }
      return `${email}@example.com`;
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏∏‡πà‡∏°‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ (1-30 ‡∏ß‡∏±‡∏ô)
    function generateExpiryTime() {
      const days = Math.floor(Math.random() * 30) + 1;
      return Math.floor(Date.now() / 1000) + days * 24 * 60 * 60;
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏∏‡πà‡∏°‡πÇ‡∏Ñ‡∏ß‡∏ï‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (1-100 GB)
    function generateTotalGB() {
      return Math.floor(Math.random() * 100) + 1;
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á V2Ray
    async function createV2RayCode(chatId) {
      try {
        // ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
        const loginResponse = await axios.post(
          'http://creators.trueid.net.vipv2boxth.xyz:2053/13RpDPnN59mBvxd/login',
          {
            username: 'WYEXPRkCKL',
            password: 'nfEpAlava1',
          }
        );

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
        if (!loginResponse.data.success) {
          return bot.sendMessage(chatId, `‚ùå ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${loginResponse.data.msg}`);
        }
        bot.sendMessage(chatId, '‚úÖ ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: Login Successfully');

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á UUID, ‡∏≠‡∏µ‡πÄ‡∏°‡∏•, ‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ ‡πÅ‡∏•‡∏∞‡πÇ‡∏Ñ‡∏ß‡∏ï‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        const uuid = uuidv4();
        const email = generateRandomEmail();
        const expiryTime = generateExpiryTime();
        const totalGB = generateTotalGB();

        // ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î V2Ray
        const createResponse = await axios.post(
          'http://creators.trueid.net.vipv2boxth.xyz:2053/13RpDPnN59mBvxd/panel/api/inbounds/addClient',
          {
            id: 3,
            settings: JSON.stringify({
              clients: [
                {
                  id: uuid,
                  flow: '',
                  email: email,
                  limitIp: 0,
                  totalGB: totalGB,
                  expiryTime: expiryTime,
                  enable: true,
                  tgId: '',
                  subId: uuidv4(),
                  reset: 0,
                },
              ],
            }),
          },
          {
            headers: {
              Accept: 'application/json',
              'Content-Type': 'application/json',
            },
          }
        );

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î
        if (createResponse.data.success) {
          bot.sendMessage(
            chatId,
            `‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î V2Ray ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:\n\nüîë **UUID**: ${uuid}\nüìß **Email**: ${email}\nüíæ **Total GB**: ${totalGB} GB\n‚è≥ **Expiry Date**: ${new Date(
              expiryTime * 1000
            ).toLocaleString()}`,
            { parse_mode: 'Markdown' }
          );
        } else {
          bot.sendMessage(chatId, `‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î V2Ray ‡πÑ‡∏î‡πâ: ${createResponse.data.msg}`);
        }
      } catch (error) {
        console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.message);
        bot.sendMessage(chatId, `‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error.message}`);
      }
    }

    // ‡∏î‡∏±‡∏Å‡∏à‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /createv2ray
    bot.onText(/\/createv2ray/, (msg) => {
      const chatId = msg.chat.id;
      createV2RayCode(chatId);
    });
  },
};
