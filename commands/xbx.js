const axios = require('axios');
const { v4: uuidv4 } = require('uuid'); // ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏∏‡πà‡∏° UUID

module.exports = {
  name: '‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î',
  description: '‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î V2Ray ‡∏î‡πâ‡∏ß‡∏¢ UUID ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ 30GB 30 ‡∏ß‡∏±‡∏ô',
  execute(bot) {
    bot.onText(/\/‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î/, async (msg) => {
      const chatId = msg.chat.id;

      // URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
      const loginUrl = "http://creators.trueid.net.vipv2boxth.xyz:2053/13RpDPnN59mBvxd/login";
      const apiUrl = "http://creators.trueid.net.vipv2boxth.xyz:2053/13RpDPnN59mBvxd/panel/api/inbounds/addClient";

      // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
      const username = "WYEXPRkCKL"; // ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
      const password = "nfEpAlava1"; // ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô

      bot.sendMessage(chatId, "üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô...");

      try {
        // ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
        const loginResponse = await axios.post(loginUrl, { username, password });
        if (!loginResponse.data.success) {
          bot.sendMessage(chatId, `‚ùå ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${loginResponse.data.msg}`);
          return;
        }

        bot.sendMessage(chatId, "‚úÖ ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î...");

        // ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
        const email = `user-${uuidv4()}@example.com`; // ‡∏™‡∏∏‡πà‡∏°‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏î‡πâ‡∏ß‡∏¢ UUID
        const subId = uuidv4(); // ‡πÅ‡∏£‡∏ô‡∏î‡∏≠‡∏° subId
        const clientId = uuidv4(); // ‡πÅ‡∏£‡∏ô‡∏î‡∏≠‡∏° client ID
        const expiryTime = Math.floor(Date.now() / 1000) + 30 * 24 * 60 * 60; // ‡∏≠‡∏≤‡∏¢‡∏∏ 30 ‡∏ß‡∏±‡∏ô (‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)

        const requestData = {
          id: 2, // ID ‡∏ó‡∏µ‡πà‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏Å‡∏≥‡∏´‡∏ô‡∏î
          settings: JSON.stringify({
            clients: [
              {
                id: clientId,
                flow: "",
                email: email,
                limitIp: 0,
                totalGB: 30, // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î GB ‡πÄ‡∏õ‡πá‡∏ô 30GB
                expiryTime: expiryTime, // ‡∏≠‡∏≤‡∏¢‡∏∏ 30 ‡∏ß‡∏±‡∏ô
                enable: true,
                tgId: "",
                subId: subId,
                reset: 0,
              },
            ],
          }),
        };

        console.log("Sending request to API...");
        console.log("Request Data:", requestData);

        // ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠
        const createResponse = await axios.post(apiUrl, requestData, {
          headers: {
            Accept: "application/json",
            "Content-Type": "application/json",
          },
        });

        const createData = createResponse.data;

        if (createData.success) {
          bot.sendMessage(
            chatId,
            `‚úÖ ‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!\n\nüìú ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÇ‡∏Ñ‡πâ‡∏î:\n- Client ID: ${clientId}\n- Email: ${email}\n- Sub ID: ${subId}\n\nüì© ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå: ${createData.msg}`
          );
        } else {
          bot.sendMessage(chatId, `‚ùå ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${createData.msg || "Unknown Error"}`);
        }
      } catch (error) {
        if (error.response) {
          console.error("Response Error:", error.response.data || "No response data");
          bot.sendMessage(
            chatId,
            `‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå: ${JSON.stringify(error.response.data || "No response data", null, 2)}`
          );
        } else if (error.request) {
          console.error("Request Error:", error.request);
          bot.sendMessage(chatId, "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ");
        } else {
          console.error("Unknown Error:", error.message);
          bot.sendMessage(chatId, `‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error.message}`);
        }
      }
    });
  },
};
